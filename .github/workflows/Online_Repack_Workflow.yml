
name: Upload Kernel to Release5

on:
  workflow_dispatch:
    inputs:
      kernel_url:
        description: 'URL kernel (GitHub / Mediafire / Mega)'
        required: true
        type: string
      kernel_mu:
        description: "Select the kernel source"
        required: false
        default: "s905x4"
        type: choice
        options:
          - s905x4
          - stable
          - dev
          - beta    
          - dtb  
          - tes
      rename_rootfs:
        description: "Rename rootfs"
        required: true
        default: ""

jobs:
  upload_kernel_release:
    runs-on: ubuntu-24.04

    steps:
      - name: Initialization environment (normal)
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get -qq update
          sudo apt-get -qq install build-essential libncurses5-dev libncursesw5-dev zlib1g-dev gawk git gettext libssl-dev xsltproc rsync wget unzip tar gzip qemu-utils mkisofs
          sudo apt-get -qq install jq python3 python3-pip
          pip install telethon
          pip install colorama
          sudo pip3 install gdown
          sudo pip3 install git+https://github.com/Juvenal-Yescas/mediafire-dl
          sudo mkdir -p /workdir/build
          sudo chown $USER:$GROUPS /workdir

      - name: Download kernel
        run: |
          if echo "${{ github.event.inputs.kernel_url }}" | grep -q "drive."; then
            if echo "${{ github.event.inputs.kernel_url }}" | awk -F "/" '{print $6}' >/dev/null; then
              link_gdrive=$(echo "${{ github.event.inputs.kernel_url }}" | awk -F "/" '{print $6}')
            else
              link_gdrive=$(echo "${{ github.event.inputs.kernel_url }}" | awk -F "/" '{print $4}' | awk -F "?id=" '{print $2}' | awk -F "&export" '{print $1}')
            fi
            sudo gdown ${link_gdrive} -O /workdir/build/file.tar.gz
          elif echo "${{ github.event.inputs.kernel_url }}" | grep -q "mediafire.com"; then
            sudo mediafire-dl "${{ github.event.inputs.kernel_url }}" -o /workdir/build/file.tar.gz
          elif echo "${{ github.event.inputs.kernel_url }}" | grep -q "mega.nz"; then
            file_mega=$(sudo mega-get "${{ github.event.inputs.kernel_url }}" | awk -F: '{print $2}')
            sudo mv "${file_mega}" /workdir/build/file.zip
          else
            sudo wget --no-check-certificate "${{ github.event.inputs.kernel_url }}" -O /workdir/build/file.tar.gz
          fi
          ln -sf /workdir/build $GITHUB_WORKSPACE/build

      - name: Extract, Repack Nested Archives, Generate SHA256, and Final Bundle
        run: |
          mkdir -p /workdir/extracted
          mkdir -p /workdir/final
          sudo tar -xzf /workdir/build/file.tar.gz -C /workdir/extracted
          echo "âœ… File utama diekstrak"

          cd /workdir/extracted

          for archive in $(find . -type f -name "*.tar.gz"); do
            dirname=$(dirname "$archive")
            filename=$(basename "$archive" .tar.gz)
            folder="$dirname/$filename"
            mkdir -p "$folder"
            echo "ðŸ“¦ Mengekstrak: $archive -> $folder"
            sudo tar -xzf "$archive" -C "$folder"

            echo "ðŸ“¦ Mengarsip ulang: $filename.tar.gz"
            cd "$folder"
            sudo tar -czf /workdir/final/${filename}.tar.gz .
            cd - > /dev/null

        
          done

          echo "ðŸ“¦ Mengarsip semua hasil ke final-${{ inputs.rename_rootfs }}.tar.gz"
          cd /workdir/final
          sudo tar -czf /workdir/build/${{ inputs.rename_rootfs }}.tar.gz
          echo "âœ… Final archive berhasil dibuat: final-${{ inputs.rename_rootfs }}.tar.gz"

      - name: Upload release asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/*.tar.gz
          tag: kernel_${{ inputs.kernel_mu }}
          file_glob: true
          overwrite: true
          body: |
            ## KUMPULAN HASIL MALINK ROOTFS
