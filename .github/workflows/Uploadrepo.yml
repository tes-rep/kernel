name: Compile release repo lain

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      kernel_source:
        description: "Select the kernel source"
        required: false
        default: "tes-rep"
        type: choice
        options:
          - unifreq
          - codesnas
          - Dirgha80
          - Houjie80
          - tes-rep
          - tes-rep@tes
          - sib0ndt/linux-6.1.66
      kernel_version:
        description: "Select kernel version"
        required: false
        default: "6.6.y_6.12.y"
        type: choice
        options:
          - 5.4.y
          - 5.10.y
          - 5.15.y
          - 6.1.y
          - 6.6.y
          - 6.13.y
          - 6.14.y
          - 6.12.y
          - 6.1.66
          - 5.4.y_5.10.y
          - 5.15.y_6.1.y
          - 6.6.y_6.12.y
      kernel_auto:
        description: "Auto use the latest kernel"
        required: false
        default: true
        type: boolean
      delete_source:
        description: "Delete the source after compilation"
        required: false
        default: true
        type: boolean   
      kernel_package:
        description: "Select compile package list"
        required: false
        default: "all"
        type: choice
        options:
          - all
          - dtbs
      kernel_toolchain:
        description: "Select the compilation toolchain"
        required: false
        default: "gcc"
        type: choice
        options:
          - clang
          - gcc
          - gcc-14.2
      compress_format:
        description: "Set the initrd compression format"
        required: false
        default: "-Hj"
        type: string
      kernel_sign:
        description: "Set the kernel custom signature"
        required: false
        default: "-Hj"
        type: string
      kernel_config:
        description: "Set the path of kernel .config"
        required: false
        default: "kernel-config/release/s905x4"
        type: choice
        options:
          - kernel-config/release/s905x4
          - kernel-config/release/general
          - kernel-config/release/DBAI
          - false
      kernel_mu:
        description: "Select the kernel source"
        required: false
        default: "s905x4"
        type: choice
        options:
          - s905x4
          - stable
          - dev
          - beta    
          - dtb
          - wifi_on

env:
  TZ: Asia/Jakarta
  PACKAGED_OUTPUTPATH: /builder/output

jobs:
  build:
    runs-on: ubuntu-22.04-arm
    if: ${{ github.event.repository.owner.id }} == ${{ github.event.sender.id }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Initialization environment
        id: init
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi $(docker images -q) 2>/dev/null
          [[ -n "${AGENT_TOOLSDIRECTORY}" ]] && sudo rm -rf "${AGENT_TOOLSDIRECTORY}"
          sudo rm -rf /usr/share/dotnet /etc/apt/sources.list.d /usr/local/lib/android 2>/dev/null
          sudo swapoff -a
          sudo rm -f /swapfile /mnt/swapfile
          sudo -E apt-get -y update
          sudo -E apt-get -y purge azure-cli ghc* zulu* llvm* firefox google* dotnet* powershell openjdk* mongodb* moby* || true
          sudo -E apt-get -y install $(curl -fsSL https://tinyurl.com/ubuntu2204-build-armbian)
          sudo -E systemctl daemon-reload
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          sudo sed -i '/NVM_DIR/d;/skel/d' /root/{.bashrc,.profile}
          sudo rm -rf ~/{.cargo,.dotnet,.rustup}
          sudo timedatectl set-timezone "${TZ}"
          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Create simulated physical disk
        id: disk
        run: |
          mnt_size=$(expr $(df -h /mnt | tail -1 | awk '{print $4}' | sed 's/[[:alpha:]]//g' | sed 's/\..*//') - 1)
          root_size=$(expr $(df -h / | tail -1 | awk '{print $4}' | sed 's/[[:alpha:]]//g' | sed 's/\..*//') - 4)
          sudo truncate -s "${mnt_size}"G /mnt/mnt.img
          sudo truncate -s "${root_size}"G /root.img
          sudo losetup /dev/loop6 /mnt/mnt.img
          sudo losetup /dev/loop7 /root.img
          sudo pvcreate /dev/loop6
          sudo pvcreate /dev/loop7
          sudo vgcreate github /dev/loop6 /dev/loop7
          sudo lvcreate -n runner -l 100%FREE github
          sudo mkfs.xfs /dev/github/runner
          sudo mkdir -p /builder
          sudo mount /dev/github/runner /builder
          sudo chown -R runner.runner /builder
          df -Th

      - name: Create a mapped directory
        id: mapped
        working-directory: /builder
        run: |
          df -hT ${PWD}
          mkdir -p /builder/{kernel,output}
          ln -sf /builder/kernel /home/runner/work/_actions/Dirgha80/amlogic-s9xxx-armbian/main/compile-kernel/kernel
          ln -sf /builder/output /home/runner/work/_actions/Dirgha80/amlogic-s9xxx-armbian/main/compile-kernel/output
          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Compile the kernel [ ${{ inputs.kernel_version }} ]
        uses: Dirgha80/amlogic-s9xxx-armbian@main
        if: ${{ steps.mapped.outputs.status }} == 'success' && !cancelled()
        with:
          build_target: kernel
          kernel_source: ${{ inputs.kernel_source }}
          kernel_version: ${{ inputs.kernel_version }}
          kernel_auto: ${{ inputs.kernel_auto }}
          delete_source: ${{ inputs.delete_source }}
          kernel_package: ${{ inputs.kernel_package }}
          kernel_toolchain: ${{ inputs.kernel_toolchain }}
          kernel_sign: ${{ inputs.kernel_sign }}
          kernel_config: ${{ inputs.kernel_config }}
          compress_format: xz
          silent_log: true

      - name: Upload Kernel to Release (repo ini)
        uses: ncipollo/release-action@main
        if: ${{ env.PACKAGED_STATUS == 'success' || success() }} && !cancelled()
        with:
          tag: kernel_${{ inputs.kernel_mu }}
          artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
          body: |
            - The kernel can be used to compile Armbian and OpenWrt.
            - The kernel source code comes from: ${{ inputs.kernel_source }}
            - The kernel compilation toolchain: ${{ inputs.kernel_toolchain }}
            - The kernel version: ${{ inputs.kernel_version }}
            - The kernel nama: ${{ inputs.kernel_sign }}
            - This is a `${{ inputs.kernel_mu }}` kernel, which can be used in Armbian and OpenWrt.
            - 这是`稳定版`内核，可以在 Armbian 和 OpenWrt 里使用。
            ## Supported Devices
            | Amlogic | MODEL | WIFI |
            | -------- | ------- | ------- |
            | **S905x**  | **HG680P** | **ON** (`-`) |
            |**s905x** | **B860H** | **NOT TEST**|
            | **S905X4** | **ADVAN AT01** | **OFF** (`-`) |
            | **S905X4** | **AKARI** | **OFF** (`-`) |
            | **s905x2** | **HG680FJ** | **NOT TEST** (`-`) |

      - name: Upload Kernel to Release (repo lain)
        uses: softprops/action-gh-release@v1
        if: ${{ env.PACKAGED_STATUS == 'success' || success() }} && !cancelled()
        env:
          GITHUB_TOKEN: ${{ secrets.UPLOAD_PAT }}
        with:
          tag_name: kernel_${{ inputs.kernel_mu }}
          repository: ${{ inputs.compress_format }}  # GANTI dengan repo tujuan kamu
          name: Kernel Release ${{ inputs.kernel_mu }}
          body: |
            ### Kernel Build Information
            - Version: `${{ inputs.kernel_version }}`
            - Toolchain: `${{ inputs.kernel_toolchain }}`
            - Signature: `${{ inputs.kernel_sign }}`
            - Kernel Type: `${{ inputs.kernel_mu }}`
            ## Supported Devices
            | Amlogic | MODEL | WIFI |
            | -------- | ------- | ------- |
            | **S905x**  | **HG680P** | **ON** (`-`) |
            |**s905x** | **B860H** | **NOT TEST**|
            | **S905X4** | **ADVAN AT01** | **OFF** (`-`) |
            | **S905X4** | **AKARI** | **OFF** (`-`) |
            | **s905x2** | **HG680FJ** | **NOT TEST** (`-`) |

          files: |
            /builder/output/*
