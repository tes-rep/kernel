name: Upload Kernel to Release

on:
  workflow_dispatch:
    inputs:
      kernel_url:
        description: 'URL kernel (GitHub / Mediafire / Mega)'
        required: true
        type: string
      kernel_mu:
        description: "Select the kernel source"
        required: false
        default: "s905x4"
        type: choice
        options:
          - s905x4
          - stable
          - dev
          - beta    
          - dtb  

jobs:
  upload_kernel_release:
    runs-on: ubuntu-latest

    steps:
      - name: Extract version from kernel URL
        id: version
        run: |
          url="${{ github.event.inputs.kernel_url }}"
          if [[ "$url" =~ ([0-9]+\.[0-9]+(\.[0-9]+)?) ]]; then
            echo "version=${BASH_REMATCH[1]}" >> $GITHUB_OUTPUT
          else
            echo "version=unknown" >> $GITHUB_OUTPUT
          fi

      - name: Install tools
        run: |
          sudo apt update
          sudo apt install -y aria2 megatools curl

      - name: Download kernel (Mediafire/Mega safe)
        run: |
          url="${{ github.event.inputs.kernel_url }}"

          if [[ "$url" =~ mega\.nz ]]; then
            megadl --path=./downloaded "$url"
            FILE=$(ls downloaded | head -n 1)
            mv "downloaded/$FILE" "$FILE"
          else
            FILENAME=$(curl -sI -L "$url" | grep -i 'content-disposition' | sed -E 's/.*filename="?([^"]+)"?.*/\1/' | tail -n1)
            if [ -z "$FILENAME" ]; then
              FILENAME=$(basename "$url" | cut -d'?' -f1)
            fi
            echo "Detected filename: $FILENAME"
            curl -L "$url" -o "$FILENAME"
          fi

          echo "filename=$FILENAME" >> $GITHUB_ENV

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: kernel_${{ inputs.kernel_mu }}
          name: Kernel ${{ steps.version.outputs.version }}
          body: |
            âœ… Auto-uploaded kernel file
            ðŸ“¦ Source: ${{ github.event.inputs.kernel_url }}
            ðŸ§© Type: `${{ inputs.kernel_mu }}`
          files: ${{ env.filename }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
