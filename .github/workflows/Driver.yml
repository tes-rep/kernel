name: Build Kernel Driver and Release

on:
  workflow_dispatch:
    inputs:
      repo_url:
        description: 'Repo Git kernel source'
        required: true
      driver_url:
        description: 'Driver ZIP/Git archive'
        required: true
      kernel_branch:
        description: 'Branch Kernel (default: main)'
        default: 'main'
        required: false
      release_tag:
        description: 'Tag Release (misal: v1.0)'
        default: 'v1.0'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ARCH: arm64
      CROSS_COMPILE: aarch64-none-linux-gnu-
      TOOLCHAIN_PATH: /opt/toolchain/arm-gnu-toolchain-14.2.rel1-x86_64-aarch64-none-linux-gnu/bin

    steps:
    - name: Checkout Workspace
      uses: actions/checkout@v4

    - name: Install Dependencies
      run: |
        sudo apt update
        sudo apt install -y make bc curl unzip xz-utils git build-essential

    - name: Download & Extract ARM64 Toolchain (gcc 14.2)
      run: |
        mkdir -p /opt/toolchain
        cd /opt/toolchain
        curl -L https://github.com/ophub/kernel/releases/download/dev/arm-gnu-toolchain-14.2.rel1-x86_64-aarch64-none-linux-gnu.tar.xz -o toolchain.tar.xz
        tar -xf toolchain.tar.xz
        echo "Toolchain extracted"

    - name: Clone Kernel Source
      run: |
        git clone --depth 1 --branch "${{ inputs.kernel_branch }}" "${{ inputs.repo_url }}" kernel

    - name: Download Driver
      run: |
        mkdir -p driver
        curl -L "${{ inputs.driver_url }}" -o driver.zip
        unzip driver.zip -d driver/
        mv driver/* driver/rtl8189fs || true

    - name: Inject Minimal Makefile
      run: |
        cat <<EOF > driver/Makefile
        obj-m += rtl8189fs/
        KDIR ?= /lib/modules/\$(shell uname -r)/build
        PWD := \$(PWD)
        all:
        	\$(MAKE) -C \$(KDIR) ARCH=\$(ARCH) CROSS_COMPILE=\$(CROSS_COMPILE) M=\$(PWD) modules
        clean:
        	\$(MAKE) -C \$(KDIR) ARCH=\$(ARCH) CROSS_COMPILE=\$(CROSS_COMPILE) M=\$(PWD) clean
        EOF

    - name: Setup Kernel Config
      run: |
        cp kernel-config/release/s905x4/config-6.12 kernel/.config || true
        cd kernel
        export PATH=$TOOLCHAIN_PATH:$PATH
        make olddefconfig
        make modules_prepare

    - name: Build Driver
      run: |
        export PATH=$TOOLCHAIN_PATH:$PATH
        cd driver
        make

    - name: Archive Output
      run: |
        mkdir -p output
        find driver -name '*.ko' -exec cp {} output/ \;
        cd output
        tar -czf driver-output.tar.gz *.ko
        echo "RELEASE_FILE=output/driver-output.tar.gz" >> $GITHUB_ENV

    - name: Upload to GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ inputs.release_tag }}
        files: ${{ env.RELEASE_FILE }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
